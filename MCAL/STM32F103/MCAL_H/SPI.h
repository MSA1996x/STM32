/*
 * SPI.h
 *
 *  Created on: Dec 21, 2019
 *      Author: Mohammed Samir
 */

#ifndef HEADERS_SPI_H_
#define HEADERS_SPI_H_

/*<Includes>*/
#include <MCAL/STM32F103/MCAL_H/EXTI.h>
#include <MCAL/STM32F103/MCAL_H/GPIO.h>
#include <MCAL/STM32F103/MCAL_H/MemoryMap.h>
/*</Includes>*/


/*<Bit-Band Pointers>*/
#define SPI1_CLOCK_ENABLE  	BITBAND_PERI(RCC_BASE + RCC_APB2ENR_OFFSET, 12)

#define SPI1_CR1_BIDIMODE	BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 15)
#define SPI1_CR1_BIDIOE		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 14)
#define SPI1_CR1_CRCEN		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 13)
#define SPI1_CR1_CRCNEXT	BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 12)
#define SPI1_CR1_DFF		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 11)
#define SPI1_CR1_RXONLY		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 10)
#define SPI1_CR1_SSM		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 9)
#define SPI1_CR1_SSI		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 8)
#define SPI1_CR1_LSBFIRST	BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 7)
#define SPI1_CR1_SPE		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 6)
#define SPI1_CR1_BR2		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 5)
#define SPI1_CR1_BR1		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 4)
#define SPI1_CR1_BR0		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 3)
#define SPI1_CR1_MSTR		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 2)
#define SPI1_CR1_CPOL		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 1)
#define SPI1_CR1_CPHA		BITBAND_PERI(SPI1_BASE + SPI_CR1_OFFSET, 0)

#define SPI1_CR2_TXEIE		BITBAND_PERI(SPI1_BASE + SPI_CR2_OFFSET, 7)
#define SPI1_CR2_RXNEIE		BITBAND_PERI(SPI1_BASE + SPI_CR2_OFFSET, 6)
#define SPI1_CR2_ERRIE		BITBAND_PERI(SPI1_BASE + SPI_CR2_OFFSET, 5)
#define SPI1_CR2_SSOE		BITBAND_PERI(SPI1_BASE + SPI_CR2_OFFSET, 2)
#define SPI1_CR2_TXDMAEN	BITBAND_PERI(SPI1_BASE + SPI_CR2_OFFSET, 1)
#define SPI1_CR2_RXDMAEN	BITBAND_PERI(SPI1_BASE + SPI_CR2_OFFSET, 0)

#define SPI1_SR_BSY			BITBAND_PERI(SPI1_BASE + SPI_SR_OFFSET, 7)
#define SPI1_SR_OVR			BITBAND_PERI(SPI1_BASE + SPI_SR_OFFSET, 6)
#define SPI1_SR_MODF		BITBAND_PERI(SPI1_BASE + SPI_SR_OFFSET, 5)
#define SPI1_SR_CRCERR		BITBAND_PERI(SPI1_BASE + SPI_SR_OFFSET, 4)
#define SPI1_SR_TXE			BITBAND_PERI(SPI1_BASE + SPI_SR_OFFSET, 1)
#define SPI1_SR_RXNE		BITBAND_PERI(SPI1_BASE + SPI_SR_OFFSET, 0)
/*</Bit-Band Pointers>*/


/*<Registers Pointers>*/
#define SPI1_DR			(*(volatile unsigned int *)(SPI1_BASE + SPI_DR_OFFSET))
#define SPI1_CRCPR		(*(volatile unsigned int *)(SPI1_BASE + SPI_CRCPR_OFFSET))
#define SPI1_RXCRCR		(*(volatile unsigned int *)(SPI1_BASE + SPI_RXCRCR_OFFSET))
#define SPI1_TXCRCR		(*(volatile unsigned int *)(SPI1_BASE + SPI_TXCRCR_OFFSET))
/*</Registers Pointers>*/



/*<Functions' Parameters>*/

/*Cases of SPI_MSTR Pram*/
#define _SPI_MSTR_OFFSET		0
#define SPI_MODE_SLAVE			(0 + _SPI_MSTR_OFFSET)
#define SPI_MODE_MASTER			(1 + _SPI_MSTR_OFFSET)

/*Cases of SPI_RX_INT Pram*/
#define _SPI_RX_INT_OFFSET		2
#define SPI_RX_INT_DISABLE		(0 + _SPI_RX_INT_OFFSET)
#define SPI_RX_INT_ENABLE		(1 + _SPI_RX_INT_OFFSET)

/*Cases of SPI_DFF Pram*/
#define _SPI_DFF_OFFSET			4
#define SPI_DFF_8_BIT			(0 + _SPI_DFF_OFFSET)
#define SPI_DFF_16_BIT			(1 + _SPI_DFF_OFFSET)

/*Cases of SPI_CPOL Pram*/
#define _SPI_CPOL_OFFSET		6
#define SPI_CPOL_CLK_IDLE_LOW	(0 + _SPI_CPOL_OFFSET)
#define SPI_CPOL_CLK_IDLE_HIGH	(1 + _SPI_CPOL_OFFSET)

/*Cases of SPI_CPHA Pram*/
#define _SPI_CPHA_OFFSET		8
#define SPI_CPHA_CLK_1ST_TRANS	(0 + _SPI_CPHA_OFFSET)
#define SPI_CPHA_CLK_2ND_TRANS	(1 + _SPI_CPHA_OFFSET)

/*Cases of SPI_BR Pram*/
#define _SPI_BR_OFFSET		10
#define SPI_BR_DIV_2		(0 + _SPI_BR_OFFSET)
#define SPI_BR_DIV_4		(1 + _SPI_BR_OFFSET)
#define SPI_BR_DIV_8		(2 + _SPI_BR_OFFSET)
#define SPI_BR_DIV_16		(3 + _SPI_BR_OFFSET)
#define SPI_BR_DIV_32		(4 + _SPI_BR_OFFSET)
#define SPI_BR_DIV_64		(5 + _SPI_BR_OFFSET)
#define SPI_BR_DIV_128		(6 + _SPI_BR_OFFSET)
#define SPI_BR_DIV_256		(7 + _SPI_BR_OFFSET)

/*Cases of SPI_LSBFIRST Pram*/
#define _SPI_LSBFIRST_OFFSET	18
#define SPI_LSBFIRST_DISABLE	(0 + _SPI_LSBFIRST_OFFSET)
#define SPI_LSBFIRST_ENABLE		(1 + _SPI_LSBFIRST_OFFSET)

/*</Functions' Parameters>*/


/*<Functions>*/
void SPI1_Init(char BR, char SPI_MODE, char SPI_RX_INT, char SPI_DFF, char SPI_CPOL, char SPI_CPHA, char SPI_LSBFIRST);
void SPI1_Pin_Config(char SPI_MODE);
void SPI1_Send(unsigned int Data);
void SPI1_Master_Send(unsigned int Data, GPIO_TypeDef *GPIO_SS, char PIN_SS);
unsigned int SPI1_Rec(void);
/*</Functions>*/


#endif /* HEADERS_SPI_H_ */
