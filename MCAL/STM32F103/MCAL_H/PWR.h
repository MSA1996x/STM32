/*
 * PCR.h
 *
 *  Created on: Dec 21, 2019
 *      Author: Mohammed Samir
 */

#ifndef HEADERS_PWR_H_
#define HEADERS_PWR_H_

#include <MCAL/STM32F103/MCAL_H/MemoryMap.h>

#define PWR_CLOCK_ENABLE  		BITBAND_PERI(RCC_BASE + RCC_APB1ENR_OFFSET, 28)

#define PWR_PWR_CR_DBP		BITBAND_PERI(PWR_BASE + PWR_CR_OFFSET, 8)
#define PWR_PWR_CR_PLS2		BITBAND_PERI(PWR_BASE + PWR_CR_OFFSET, 7)
#define PWR_PWR_CR_PLS1		BITBAND_PERI(PWR_BASE + PWR_CR_OFFSET, 6)
#define PWR_PWR_CR_PLS0		BITBAND_PERI(PWR_BASE + PWR_CR_OFFSET, 5)
#define PWR_PWR_CR_PVDE		BITBAND_PERI(PWR_BASE + PWR_CR_OFFSET, 4)
#define PWR_PWR_CR_CSBF		BITBAND_PERI(PWR_BASE + PWR_CR_OFFSET, 3)
#define PWR_PWR_CR_CWUF		BITBAND_PERI(PWR_BASE + PWR_CR_OFFSET, 2)
#define PWR_PWR_CR_PDDS		BITBAND_PERI(PWR_BASE + PWR_CR_OFFSET, 1)
#define PWR_PWR_CR_LPDS		BITBAND_PERI(PWR_BASE + PWR_CR_OFFSET, 0)


#define PWR_PWR_CSR_EWUP	BITBAND_PERI(PWR_BASE + PWR_CSR_OFFSET, 8)
#define PWR_PWR_CSR_PDVO	BITBAND_PERI(PWR_BASE + PWR_CSR_OFFSET, 2)
#define PWR_PWR_CSR_SBF		BITBAND_PERI(PWR_BASE + PWR_CSR_OFFSET, 1)
#define PWR_PWR_CSR_WUF		BITBAND_PERI(PWR_BASE + PWR_CSR_OFFSET, 0)


#define _PWR_DBP_OFFSET			0
#define PWR_DBP_DISABLE			(0 + _PWR_DBP_OFFSET)
#define PWR_DBP_ENABLE			(1 + _PWR_DBP_OFFSET)

#define _PWR_PLS_OFFSET			2
#define PWR_PLS_2V2				(0 + _PWR_PLS_OFFSET)
#define PWR_PLS_2V3				(1 + _PWR_PLS_OFFSET)
#define PWR_PLS_2V4				(2 + _PWR_PLS_OFFSET)
#define PWR_PLS_2V5				(3 + _PWR_PLS_OFFSET)
#define PWR_PLS_2V6				(4 + _PWR_PLS_OFFSET)
#define PWR_PLS_2V7				(5 + _PWR_PLS_OFFSET)
#define PWR_PLS_2V8				(6 + _PWR_PLS_OFFSET)
#define PWR_PLS_2V9				(7 + _PWR_PLS_OFFSET)

#define _PWR_PVDE_OFFSET		10
#define PWR_PVDE_DISABLE		(0 + _PWR_PVDE_OFFSET)
#define PWR_PVDE_ENABLE			(1 + _PWR_PVDE_OFFSET)

#define _PWR_CSBF_OFFSET		12
#define PWR_CSBF_NO_EFFECT		(0 + _PWR_CSBF_OFFSET)
#define PWR_CSBF_CLEAR_SBF		(1 + _PWR_CSBF_OFFSET)

#define _PWR_CWUF_OFFSET		14
#define PWR_CWUF_NO_EFFECT		(0 + _PWR_CWUF_OFFSET)
#define PWR_CWUF_CLEAR_WUF		(1 + _PWR_CWUF_OFFSET)

#define _PWR_PDDS_OFFSET		16
#define PWR_PDDS_STOP_MODE		(0 + _PWR_PDDS_OFFSET)
#define PWR_PDDS_STANDBY		(1 + _PWR_PDDS_OFFSET)

#define _PWR_LPDS_OFFSET		18
#define PWR_LPDS_VR_ON			(0 + _PWR_LPDS_OFFSET)
#define PWR_LPDS_VR_LPM			(1 + _PWR_LPDS_OFFSET)

#define _PWR_EWUP_OFFSET		20
#define PWR_EWUP_WUP_DISABLE	(0 + _PWR_EWUP_OFFSET)
#define PWR_EWUP_WUP_ENABLE		(1 + _PWR_EWUP_OFFSET)

#define _PWR_SEVEONPEND_OFFSET		22
#define PWR_SEVEONPEND_ENB_INT		(0 + _PWR_SEVEONPEND_OFFSET)
#define PWR_SEVEONPEND_ALL_INT		(1 + _PWR_SEVEONPEND_OFFSET)

#define _PWR_SLEEPMODE_OFFSET		24
#define PWR_SLEEPMODE_SLEEP			(0 + _PWR_SLEEPMODE_OFFSET)
#define PWR_SLEEPMODE_DEEPSLEEP		(1 + _PWR_SLEEPMODE_OFFSET)

#define _PWR_SLEEPONEXIT_OFFSET		26
#define PWR_SLEEPONEXIT_DISABLE		(0 + _PWR_SLEEPONEXIT_OFFSET)
#define PWR_SLEEPONEXIT_ENABLE		(1 + _PWR_SLEEPONEXIT_OFFSET)


#define SCB_SCR 	(*(volatile unsigned int *)(SCB_BASE + SCB_SCR_OFFSET))
#define PWR_CR 		(*(volatile unsigned int *)(PWR_BASE + PWR_CR_OFFSET))
#define PWR_CSR 	(*(volatile unsigned int *)(PWR_BASE + PWR_CSR_OFFSET))


void WFI(void);
void WFE(void);
void PWR_Conifg(char PWR_DBP, char PWR_PLS, char PWR_PVDE, char PWR_PDDS, char PWR_LPDS, char PWR_EWUP);
void PWR_SCB_Config(char PWR_SEVEONPEND,char PWR_SLEEPMODE,char PWR_SLEEPONEXIT);
void PWR_Clear_Flags(char PWR_CSBF, char PWR_CWUF);


#endif /* HEADERS_PWR_H_ */
