/*
 * I2C.h
 *
 *  Created on: Dec 27, 2019
 *      Author: Mohammed Samir
 */

#ifndef HEADERS_I2C_H_
#define HEADERS_I2C_H_


/*<Includes>*/
#include <HAL/HAL_H/Delay.h>
#include <MCAL/STM32F103/MCAL_H/GPIO.h>
#include <MCAL/STM32F103/MCAL_H/MemoryMap.h>
/*</Includes>*/

/*<Bit-Band Pointers>*/
#define I2C1_CLOCK_ENABLE  		BITBAND_PERI(RCC_BASE + RCC_APB1ENR_OFFSET, 21)
#define I2C1_RESET		  		BITBAND_PERI(RCC_BASE + RCC_APB1RSTR_OFFSET, 21)


#define I2C1_CR1_SWRST  		BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 15)
#define I2C1_CR1_ALERT  		BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 13)
#define I2C1_CR1_PEC  			BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 12)
#define I2C1_CR1_POS  			BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 11)
#define I2C1_CR1_ACK 			BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 10)
#define I2C1_CR1_STOP  			BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 9)
#define I2C1_CR1_START  		BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 8)
#define I2C1_CR1_NOSTRETCH  	BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 7)
#define I2C1_CR1_ENGC  			BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 6)
#define I2C1_CR1_ENPEC  		BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 5)
#define I2C1_CR1_ENARP  		BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 4)
#define I2C1_CR1_SMBTYPE 		BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 3)
#define I2C1_CR1_SMBUS  		BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 1)
#define I2C1_CR1_PE 			BITBAND_PERI(I2C1_BASE + I2C_CR1_OFFSET, 0)


#define I2C1_CR2_LAST 			BITBAND_PERI(I2C1_BASE + I2C_CR2_OFFSET, 12)
#define I2C1_CR2_DMAEN 			BITBAND_PERI(I2C1_BASE + I2C_CR2_OFFSET, 11)
#define I2C1_CR2_ITBUFEN 		BITBAND_PERI(I2C1_BASE + I2C_CR2_OFFSET, 10)
#define I2C1_CR2_ITEVTEN 		BITBAND_PERI(I2C1_BASE + I2C_CR2_OFFSET, 9)
#define I2C1_CR2_ITERREN 		BITBAND_PERI(I2C1_BASE + I2C_CR2_OFFSET, 8)


#define I2C1_OAR1_ADDMODE		BITBAND_PERI(I2C1_BASE + I2C_OAR1_OFFSET, 15)

#define I2C1_OAR2_ENDUAL		BITBAND_PERI(I2C1_BASE + I2C_OAR2_OFFSET, 0)


#define I2C1_SR1_SMBALERT		BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 15)
#define I2C1_SR1_TIMEOUT		BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 14)
#define I2C1_SR1_PECERR			BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 12)
#define I2C1_SR1_OVR			BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 11)
#define I2C1_SR1_AF				BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 10)
#define I2C1_SR1_ARLO			BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 9)
#define I2C1_SR1_BERR			BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 8)
#define I2C1_SR1_TxE			BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 7)
#define I2C1_SR1_RxNE			BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 6)
#define I2C1_SR1_STOPF			BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 4)
#define I2C1_SR1_ADD10			BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 3)
#define I2C1_SR1_BTF			BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 2)
#define I2C1_SR1_ADDR			BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 1)
#define I2C1_SR1_SB				BITBAND_PERI(I2C1_BASE + I2C_SR1_OFFSET, 0)

#define I2C1_SR2_DUALF			BITBAND_PERI(I2C1_BASE + I2C_SR2_OFFSET, 7)
#define I2C1_SR2_SMBHOST		BITBAND_PERI(I2C1_BASE + I2C_SR2_OFFSET, 6)
#define I2C1_SR2_SMBDEFAULT		BITBAND_PERI(I2C1_BASE + I2C_SR2_OFFSET, 5)
#define I2C1_SR2_GENCALL		BITBAND_PERI(I2C1_BASE + I2C_SR2_OFFSET, 4)
#define I2C1_SR2_TRA			BITBAND_PERI(I2C1_BASE + I2C_SR2_OFFSET, 2)
#define I2C1_SR2_BUSY			BITBAND_PERI(I2C1_BASE + I2C_SR2_OFFSET, 1)
#define I2C1_SR2_MSL			BITBAND_PERI(I2C1_BASE + I2C_SR2_OFFSET, 0)

#define I2C1_CCR_F_S			BITBAND_PERI(I2C1_BASE + I2C_CCR_OFFSET, 15)
#define I2C1_CCR_DUTY			BITBAND_PERI(I2C1_BASE + I2C_CCR_OFFSET, 14)
/*</Bit-Band Pointers>*/



/*<Registers Pointers>*/
#define I2C1_CR1_REG	 	(*(volatile unsigned int *)(I2C1_BASE + I2C_CR1_OFFSET))
#define I2C1_CR2_REG	 	(*(volatile unsigned int *)(I2C1_BASE + I2C_CR2_OFFSET))
#define I2C1_OAR1_REG	 	(*(volatile unsigned int *)(I2C1_BASE + I2C_OAR1_OFFSET))
#define I2C1_OAR2_REG	 	(*(volatile unsigned int *)(I2C1_BASE + I2C_OAR2_OFFSET))
#define I2C1_DR_REG	 		(*(volatile unsigned int *)(I2C1_BASE + I2C_DR_OFFSET))
#define I2C1_SR1_REG	 	(*(volatile unsigned int *)(I2C1_BASE + I2C_SR1_OFFSET))
#define I2C1_SR2_REG	 	(*(volatile unsigned int *)(I2C1_BASE + I2C_SR2_OFFSET))
#define I2C1_CCR_REG	 	(*(volatile unsigned int *)(I2C1_BASE + I2C_CCR_OFFSET))
#define I2C1_TRISE_REG	 	(*(volatile unsigned int *)(I2C1_BASE + I2C_TRISE_OFFSET))
/*</Registers Pointers>*/



/*<Functions' Parameters>*/

/*Cases of I2C_INTERRUPT Pram*/
#define _I2C_INTERRUPT_OFFSET		0
#define I2C_INTERRUPT_DISABLE		(0 + _I2C_INTERRUPT_OFFSET)
#define I2C_INTERRUPT_ENABLE		(1 + _I2C_INTERRUPT_OFFSET)

#define _I2C_DIR_OFFSET				2
#define I2C_DIR_WRITE				(0 + _I2C_DIR_OFFSET)
#define I2C_DIR_READ				(1 + _I2C_DIR_OFFSET)

#define _I2C_MODE_OFFSET			4
#define I2C_MODE_SM					(0 + _I2C_MODE_OFFSET)
#define I2C_MODE_FM					(1 + _I2C_MODE_OFFSET)





/*</Functions' Parameters>*/



/*<Functions>*/
void I2C1_Init(char I2C_MODE, char I2C_INTERRUPT);
void I2C1_Set_Add7(unsigned char Address);
void I2C1_Start_Bit();
char I2C1_Send_SR(void);
char I2C1_Send_Address7(unsigned char Address7, char I2C_DIR, char TimeOut_us);
void I2C1_Send_Data(unsigned char Data);
void I2C1_Send_ACK(void);
void I2C1_Send_NACK(void);
void I2C1_Send_Stop(void);
char I2C1_Read(unsigned char Address7, unsigned char* Buf, char Num, char TimeOut_us);
/*</Functions>*/

#endif /* HEADERS_I2C_H_ */
